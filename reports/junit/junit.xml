<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="0" skipped="7" tests="29" time="1.478" timestamp="2025-02-13T17:15:20.358662-03:00" hostname="pc029-ubu"><testcase classname="tests.methods.value_based.q_learning.test_numpy" name="test_set_table" time="0.012" /><testcase classname="tests.methods.value_based.q_learning.test_numpy" name="test_get_output" time="0.009" /><testcase classname="tests.methods.value_based.q_learning.test_numpy" name="test_epsilon_greedy" time="0.008" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_hyper_parameters" time="0.008" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space[space0-expected0]" time="0.045" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space[space1-expected1]" time="0.007" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space[space2-expected2]" time="0.008"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space[space3-expected3]" time="0.009"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space[space4-expected4]" time="0.009"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space_raise_error_when_wrong_space[space0]" time="0.009" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space_raise_error_when_wrong_space[space1]" time="0.007" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_input_space_raise_error_when_wrong_space[space2]" time="0.008" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space[space0-10]" time="0.008" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space[space1-9]" time="0.008"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space[space2-9]" time="0.009"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space[space3-9]" time="0.009"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space[space4-9]" time="0.009"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space_raise_error_when_wrong_space[space0]" time="0.009" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space_raise_error_when_wrong_space[space1]" time="0.048" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_set_output_space_raise_error_when_wrong_space[space2]" time="0.007" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_get_action" time="0.008" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_update" time="0.007" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_save" time="0.010" /><testcase classname="tests.methods.value_based.q_learning.test_q_learning" name="test_load" time="0.008" /><testcase classname="tests.utils.replay_buffer.test_base" name="test_add" time="0.001" /><testcase classname="tests.utils.replay_buffer.test_base" name="test_add_multiple_experiences" time="0.001" /><testcase classname="tests.utils.replay_buffer.test_base" name="test_clear" time="0.001" /><testcase classname="tests.utils.replay_buffer.test_torch" name="test_sample[1]" time="0.002" /><testcase classname="tests.utils.replay_buffer.test_torch" name="test_sample[2]" time="0.001" /></testsuite></testsuites>